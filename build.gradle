apply plugin: 'cpp'

model {
   binaries {
      all {
		 if (toolChain in Clang) {
			cppCompiler.args "-std=c++11",
				 "-I/home/travis/build/kevinmmurphy/quikbldr/include",
							 "-I/Users/kmurphy/src/websocketpp", 
							 "-I/Users/kmurphy/src/boost_1_62_0", "-v"
		 }
		 if (toolChain in Gcc) {
			cppCompiler.args "-std=c++11",
				 "-I/home/travis/build/kevinmmurphy/quikbldr/include",
							 "-I/Users/kmurphy/src/websocketpp", 
							 "-I/Users/kmurphy/src/boost_1_62_0", "-v"
		 }
      }
   }
   components {
       objs(NativeLibrarySpec)
	   
       //srv(NativeLibrarySpec)
	   
       main(NativeExecutableSpec){
		binaries.all {
			lib library: 'objs', linkage: 'static'
		}
	   }
	   /*
       webserver(NativeExecutableSpec){
          binaries {
             all {
              linker.args "-v", 
                          "-L/Users/kmurphy/src/boost_1_62_0/stage/lib",
                          "/Users/kmurphy/src/boost_1_62_0/stage/lib/libboost_system.a",  
                          "/Users/kmurphy/src/boost_1_62_0/stage/lib/libboost_chrono.a"
              lib library: 'server', linkage: 'static'
             }
          }
       }
	   */
   }
}
